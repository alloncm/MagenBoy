[config]
default_to_workspace = false

[env]
nightly_version = "nightly-2023-10-05" # 1.73.0 toolchain nightly version

[tasks.test]
command = "cargo"
args = ["test", "--package", "magenboy_core"]

[tasks.sdl]
command = "cargo"
args = ["build", "--release", "--package", "magenboy_sdl"]

[tasks.sdl_dbg]
command = "cargo"
args = ["build", "--release", "--package", "magenboy_sdl", "--features", "dbg"]

[tasks.sdl.linux]
args = ["build", "--release", "--package", "magenboy_sdl", "--no-default-features"]
dependencies = ["install_sdl2_linux"]

[tasks.sdl_dbg.linux]
args = ["build", "--release", "--package", "magenboy_sdl", "--no-default-features", "--features", "dbg"]
dependencies = ["install_sdl2_linux"]

[tasks.install_sdl2_linux]
script = [
"""
# returns early if the package was already installed and install it otherwise. The first
# argument is the package name to be checked (and installed if not already).
# other arguments are passed to apt-get
try_install() {
    dpkg -l "$1" | grep -q ^ii && return 0
    sudo apt-get -y install "$@"
    return 0
}
try_install libsdl2-dev
"""
]

[tasks.rpios]
install_crate = {crate_name = "cross", binary = "cross", test_arg = "-h"}
install_crate_args=["--locked", "--version", "0.2.5"]
command = "cross"
args = ["build", "--release", "--target", "armv7-unknown-linux-gnueabihf", "--bin", "rpios","--no-default-features", "--features", "os"]

[tasks.nightly-install]
command = "rustup"
args = ["toolchain", "install", "--profile", "minimal", "--no-self-update", "${nightly_version}"]

[tasks.rpibm]
toolchain = "${nightly_version}"
install_crate = "cargo-binutils"
install_crate_args=["--locked", "--version", "0.3.6"]
command = "rust-objcopy"
args = ["target/armv7a-none-eabihf/release/baremetal", "-O", "binary", "kernel7.img"]
dependencies = ["nightly-install", "build_rpi_baremetal","install_llvm_tools"]

[tasks.build_rpi_baremetal]
toolchain = "${nightly_version}"
command = "cargo"
args = ["build", "--release", "--target", "armv7a-none-eabihf","--package", "magenboy_rpi", "--bin", "baremetal", "-Z", "build-std=core", "--features", "bm"]
dependencies = ["install_rust_src"]

[tasks.install_llvm_tools]
toolchain = "${nightly_version}"
install_crate = {rustup_component_name = "llvm-tools-preview"}

[tasks.install_rust_src]
toolchain = "${nightly_version}"
command = "rustup"
args = ["component", "add", "rust-src"]

[tasks.libretro_desktop]
command = "cargo"
args = ["build", "--release", "--package", "magenboy_libretro"]

[tasks.libretro_android]
install_crate = {crate_name = "cargo-ndk", binary = "cargo", test_arg = "ndk"}
install_crate_args=["--locked", "--version", "3.5.4"]
command = "cargo"
args = ["ndk", "--target=aarch64-linux-android", "build", "--release", "--package", "magenboy_libretro"]
dependencies = ["add_android_target"]

[tasks.add_android_target]
command = "rustup"
args = ["target", "add", "aarch64-linux-android"]

[tasks.nx]
command = "make"
args = ["--directory", "nx", "--always-make"]
dependencies = ["build_nx"]
# TODO: install libnx

[tasks.build_nx]
toolchain = "${nightly_version}"
command = "cargo"
args = ["build", "--release", "--package", "magenboy_nx", "--target", "aarch64-nintendo-switch-freestanding", 
    "-Z", "build-std=core,compiler_builtins,alloc", "-Z", "build-std-features=compiler-builtins-mem"]
dependencies = ["nightly-install", "install_rust_src"]